{"version":3,"file":"static/chunks/pages/createuser-affaff68af352e4e.js","mappings":"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","sources":["webpack://_N_E/?fb18","webpack://_N_E/./components/Input.tsx","webpack://_N_E/./components/Layout.tsx","webpack://_N_E/./components/LogInForm.tsx","webpack://_N_E/./components/AvatarInput.tsx","webpack://_N_E/./pages/createuser.tsx","webpack://_N_E/./node_modules/next/head.js"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/createuser\",\n      function () {\n        return require(\"private-next-pages/createuser.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/createuser\"])\n      });\n    }\n  ","import React from \"react\";\r\nimport { UseFormRegisterReturn } from \"react-hook-form\";\r\nimport tw from \"tailwind-styled-components\";\r\n\r\nconst InputItem = tw.input`\r\n  w-full\r\n  rounded-md\r\n  p-2\r\n  placeholder:text-gray-300\r\n  focus:outline-indigo-700\r\n`;\r\n\r\ninterface InputProps {\r\n  type: \"email\" | \"password\" | \"text\";\r\n  placeholder: String;\r\n  register: UseFormRegisterReturn;\r\n  required?: boolean;\r\n}\r\n\r\nfunction Input({ type, placeholder, register, required }: InputProps) {\r\n  return (\r\n    <>\r\n      {type === \"email\" ? (\r\n        <InputItem\r\n          autoComplete=\"off\"\r\n          {...register}\r\n          type={type}\r\n          placeholder={placeholder}\r\n          required={required}\r\n        />\r\n      ) : null}\r\n      {type === \"password\" ? (\r\n        <InputItem\r\n          autoComplete=\"off\"\r\n          {...register}\r\n          type={type}\r\n          placeholder={placeholder}\r\n          required={required}\r\n        />\r\n      ) : null}\r\n      {type === \"text\" ? (\r\n        <InputItem\r\n          autoComplete=\"off\"\r\n          {...register}\r\n          type={type}\r\n          placeholder={placeholder}\r\n          required={required}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import { TwitterOutlined } from \"@ant-design/icons\";\r\nimport Link from \"next/link\";\r\nimport { useRouter } from \"next/router\";\r\nimport React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useSelector } from \"react-redux\";\r\nimport tw from \"tailwind-styled-components\";\r\n\r\nimport { RootState } from \"../reducers\";\r\n\r\nconst Wrapper = tw.div`\r\n`;\r\n\r\nconst NavContainer = tw.nav`\r\n  flex\r\n  justify-between\r\n  items-center\r\n  border-b-1\r\n  h-16\r\n  px-10\r\n  bg-gray-100\r\n`;\r\n\r\nconst MenuContainer = tw.div`\r\n  flex\r\n  items-center\r\n  w-full\r\n  max-w-xl\r\n  space-x-10\r\n`;\r\n\r\nconst MenuItem = tw.div`\r\n  hidden\r\n  cursor-pointer\r\n  sm:flex text-gray-500 hover:text-indigo-700 hover:border-b-[1px] hover:font-bold\r\n`;\r\n\r\nconst MobileButton = tw.button`\r\n  sm:hidden\r\n`;\r\n\r\nconst SearchInput = tw.input`\r\n  hidden\r\n  sm:flex\r\n  p-2\r\n  bg-transparent\r\n  placeholder:text-gray-400\r\n  focus:outline-indigo-700\r\n  rounded-md\r\n \r\n`;\r\n\r\nconst MobileSearchInput = tw.input`\r\n  p-2\r\n  bg-transparent\r\n  placeholder:text-gray-300\r\n  focus:outline-indigo-700\r\n  rounded-md\r\n`;\r\n\r\nconst MobileNavContainer = tw.nav<IsToggeldProps>`\r\n  ${(p) =>\r\n    p.$isToggled\r\n      ? \"py-4 shadow-md absolute w-full flex-col z-10 justify-center bg-gray-100 text-gray-500 space-y-2 px-2 \"\r\n      : \"hidden\"}\r\n  sm:hidden\r\n  \r\n`;\r\n\r\ninterface IsToggeldProps {\r\n  $isToggled: boolean;\r\n}\r\n\r\nconst MobileMenuItem = tw.div`\r\n  hover:font-bold \r\n  hover:text-indigo-700\r\n  cursor-pointer\r\n`;\r\n\r\nconst LogIn = tw.a<LogInProps>`\r\n  ${(p) => (p.$isLogIn ? \"hidden\" : \"visible\")}\r\n`;\r\n\r\ninterface LogInProps {\r\n  $isLogIn: boolean;\r\n}\r\nconst Layout = ({ children }) => {\r\n  const { me } = useSelector((state: RootState) => state.userReducer);\r\n  const router = useRouter();\r\n  const isLogIn = useSelector(\r\n    (state: RootState) => state.userReducer.logInDone\r\n  );\r\n  const [isToggled, setIsToggled] = useState(false);\r\n  const onClickMenu = () => {\r\n    setIsToggled(!isToggled);\r\n  };\r\n\r\n  const { register, handleSubmit, reset } = useForm();\r\n  const onSearchMobileValid = (data) => {\r\n    router.push(`/search/${data.searchMobile}`);\r\n    reset();\r\n  };\r\n\r\n  const onSearchValid = (data) => {\r\n    router.push(`/search/${data.search}`);\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <NavContainer>\r\n        <MenuContainer>\r\n          <TwitterOutlined style={{ color: \"#4F46E5 \", fontSize: \"24px\" }} />\r\n          <MenuItem>\r\n            <Link href=\"/\">\r\n              <a>홈</a>\r\n            </Link>\r\n          </MenuItem>\r\n          {me ? (\r\n            <MenuItem>\r\n              <Link href=\"/profile\">\r\n                <a>마이페이지</a>\r\n              </Link>\r\n            </MenuItem>\r\n          ) : null}\r\n          {!isLogIn ? (\r\n            <MenuItem>\r\n              <Link href=\"/signin\">\r\n                <LogIn $isLogIn={me}>로그인</LogIn>\r\n              </Link>\r\n            </MenuItem>\r\n          ) : null}\r\n        </MenuContainer>\r\n        <MobileButton onClick={onClickMenu}>\r\n          {!isToggled ? (\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"h-6 w-6 hover:text-indigo-600\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n              strokeWidth=\"2\"\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                d=\"M4 6h16M4 12h16M4 18h16\"\r\n              />\r\n            </svg>\r\n          ) : (\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"h-6 w-6 hover:text-indigo-600\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n              strokeWidth=\"2\"\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                d=\"M6 18L18 6M6 6l12 12\"\r\n              />\r\n            </svg>\r\n          )}\r\n        </MobileButton>\r\n        <form onSubmit={handleSubmit(onSearchValid)}>\r\n          <SearchInput\r\n            autoComplete=\"off\"\r\n            {...register(\"search\")}\r\n            placeholder=\"search\"\r\n          />\r\n        </form>\r\n      </NavContainer>\r\n      <MobileNavContainer $isToggled={isToggled}>\r\n        <MobileMenuItem>\r\n          <Link href=\"/\">\r\n            <a>홈</a>\r\n          </Link>\r\n        </MobileMenuItem>\r\n        <MobileMenuItem>\r\n          {me ? (\r\n            <Link href=\"/profile\">\r\n              <a>마이페이지</a>\r\n            </Link>\r\n          ) : null}\r\n        </MobileMenuItem>\r\n        {!isLogIn ? (\r\n          <MobileMenuItem>\r\n            <Link href=\"/signin\">\r\n              <LogIn $isLogIn={me}>로그인</LogIn>\r\n            </Link>\r\n          </MobileMenuItem>\r\n        ) : null}\r\n        <form onSubmit={handleSubmit(onSearchMobileValid)}>\r\n          <MobileSearchInput\r\n            autoComplete=\"off\"\r\n            {...register(\"searchMobile\")}\r\n            placeholder=\"search\"\r\n          />\r\n        </form>\r\n      </MobileNavContainer>\r\n      {children}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport tw from \"tailwind-styled-components\";\r\n\r\nconst LoginWrapper = tw.div<WrapperProps>`\r\n  max-w-sm\r\n  mx-auto\r\n  bg-gray-100\r\n  mt-24\r\n  space-y-10\r\n  flex-col\r\n  text-center\r\n  rounded-md\r\n  shadow-md\r\n  sm:max-w-lg\r\n  ${(p) => (p.$isLogIn ? \" h-96\" : \"h-[45rem]\")}\r\n`;\r\n\r\nconst LogInHead = tw.div`\r\n  text-2xl\r\n  font-bold\r\n  pt-10\r\n`;\r\n\r\ninterface WrapperProps {\r\n  $isLogIn: boolean;\r\n}\r\n\r\nfunction LogInForm({ children, headTitle, isLogIn = true }) {\r\n  return (\r\n    <>\r\n      <LoginWrapper $isLogIn={isLogIn}>\r\n        <LogInHead>{headTitle}</LogInHead>\r\n        {children}\r\n      </LoginWrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LogInForm;\r\n","import React, { useCallback, useEffect, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport tw from \"tailwind-styled-components\";\r\nimport {\r\n  avatarDeleteAction,\r\n  avatarUploadRequestAction,\r\n} from \"../action/userAction\";\r\nimport { RootState } from \"../reducers\";\r\n\r\nconst PreAvatar = tw.img`\r\n  rounded-full\r\n  w-16\r\n  h-16\r\n`;\r\n\r\nconst Avatar = tw.img`\r\n bg-slate-500\r\n  w-16\r\n  h-16\r\n  rounded-full\r\n`;\r\n\r\nconst InputAvatar = tw.input`\r\n  hidden\r\n`;\r\n\r\nconst AvatarButton = tw.div`\r\n  cursor-pointer\r\n  text-sm\r\n  text-gray-500\r\n  hover:text-indigo-600\r\n  hover:font-bold\r\n  border-2\r\n  rounded-md\r\n  p-2\r\n`;\r\n\r\nfunction AvatarInput() {\r\n  const avatarInput = useRef<HTMLInputElement>();\r\n  const dispatch = useDispatch();\r\n  const onClickAvater = useCallback(() => {\r\n    avatarInput.current.click();\r\n  }, [avatarInput.current]);\r\n\r\n  const onChangeAvatar = (e) => {\r\n    const avatarFormData = new FormData();\r\n    [].forEach.call(e.target.files, (file) => {\r\n      avatarFormData.append(\"avatar\", file);\r\n    });\r\n    dispatch(avatarUploadRequestAction(avatarFormData));\r\n    e.target.value = \"\";\r\n  };\r\n\r\n  const onClickDeleteAvatar = () => {\r\n    dispatch(avatarDeleteAction());\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(avatarDeleteAction());\r\n  }, []);\r\n\r\n  const { avatarPaths, me } = useSelector(\r\n    (state: RootState) => state.userReducer\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex items-center space-x-3\">\r\n        {avatarPaths !== \"null\" ? (\r\n          <PreAvatar src={`http://localhost:4000/${avatarPaths}`} />\r\n        ) : (\r\n          <Avatar />\r\n        )}\r\n\r\n        {avatarPaths === \"null\" ? (\r\n          <AvatarButton onClick={onClickAvater}>이미지</AvatarButton>\r\n        ) : (\r\n          <AvatarButton onClick={onClickDeleteAvatar}>초기화</AvatarButton>\r\n        )}\r\n      </div>\r\n      <InputAvatar\r\n        name=\"avatar\"\r\n        type=\"file\"\r\n        ref={avatarInput}\r\n        onChange={onChangeAvatar}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AvatarInput;\r\n","import Head from \"next/head\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Input from \"../components/Input\";\r\nimport Layout from \"../components/Layout\";\r\nimport LogInForm from \"../components/LogInForm\";\r\nimport tw from \"tailwind-styled-components\";\r\nimport { useRouter } from \"next/router\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { signUpRequestAction } from \"../action/signUpAction\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../reducers\";\r\nimport AvatarInput from \"../components/AvatarInput\";\r\n\r\nconst LoginForm = tw.form`\r\n  space-y-5\r\n  px-16\r\n`;\r\n\r\nconst SubmitButton = tw.button`\r\n  text-white\r\n  hover:bg-indigo-600\r\n  hover:font-bold\r\n  border\r\n  p-2\r\n  px-4\r\n  mt-12\r\n  rounded-md\r\n  bg-indigo-400\r\n`;\r\n\r\nconst Error = tw.div`\r\n  text-red-500\r\n  text-sm\r\n  text-start\r\n`;\r\n\r\ninterface ValidForm {\r\n  email: string;\r\n  password: string;\r\n  passwordCheck: string;\r\n  name: string;\r\n}\r\n\r\nfunction createuser() {\r\n  const { signUpDone, signUpLoading } = useSelector(\r\n    (state: RootState) => state.signUpReducer\r\n  );\r\n  const dispatch = useDispatch();\r\n  const { avatarPaths } = useSelector((state: RootState) => state.userReducer);\r\n  const router = useRouter();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm<ValidForm>();\r\n  const onValid = ({ email, name, password, passwordCheck }: ValidForm) => {\r\n    if (password !== passwordCheck) {\r\n      alert(\"비밀번호가 일치하지 않습니다\");\r\n      reset({ passwordCheck: \"\" });\r\n    } else {\r\n      if (!avatarPaths) {\r\n        dispatch(signUpRequestAction({ email, name, password }));\r\n      } else {\r\n        const formData = new FormData();\r\n        formData.append(\"avatar\", avatarPaths);\r\n        formData.append(\"email\", email);\r\n        formData.append(\"name\", name);\r\n        formData.append(\"password\", password);\r\n\r\n        dispatch(signUpRequestAction(formData));\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (signUpDone) {\r\n      router.replace(\"/signin\");\r\n    }\r\n  }, [signUpDone]);\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <meta charSet=\"UTF-8\" />\r\n        <title>회원가입| Social Service</title>\r\n      </Head>\r\n      <Layout>\r\n        <LogInForm headTitle=\"회원가입\" isLogIn={false}>\r\n          <LoginForm\r\n            onSubmit={handleSubmit(onValid)}\r\n            encType=\"multipart/form-data\"\r\n          >\r\n            <AvatarInput />\r\n            <Input\r\n              register={register(\"email\", {\r\n                required: \"Email Id를 입력해주세요\",\r\n              })}\r\n              type=\"email\"\r\n              placeholder=\"Email ID\"\r\n            />\r\n            <Error>{errors.email?.message}</Error>\r\n            <Input\r\n              register={register(\"name\", {\r\n                required: \"닉네임을 입력해주세요\",\r\n                maxLength: {\r\n                  value: 10,\r\n                  message: \"닉네임은 10자 이하로 입력해주세요\",\r\n                },\r\n              })}\r\n              type=\"text\"\r\n              placeholder=\"닉네임\"\r\n            />\r\n            <Error>{errors.name?.message}</Error>\r\n            <Input\r\n              register={register(\"password\", {\r\n                required: \"비밀번호를 입력해주세요\",\r\n                minLength: {\r\n                  value: 5,\r\n                  message: \"비밀번호는 5자 이상으로 입력해주세요\",\r\n                },\r\n              })}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n            />\r\n            <Error>{errors.password?.message}</Error>\r\n            <Input\r\n              register={register(\"passwordCheck\", {\r\n                required: \"비밀번호를 다시 한번 입력해주세요\",\r\n              })}\r\n              type=\"password\"\r\n              placeholder=\"Password Check\"\r\n            />\r\n            <Error>{errors.passwordCheck?.message}</Error>\r\n            <div>\r\n              <SubmitButton>\r\n                {signUpLoading ? \"Loading...\" : \"회원가입\"}\r\n              </SubmitButton>\r\n            </div>\r\n          </LoginForm>\r\n        </LogInForm>\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default createuser;\r\n","module.exports = require('./dist/shared/lib/head')\n"],"names":["window","__NEXT_P","push","InputItem","tw","type","placeholder","register","required","autoComplete","Wrapper","NavContainer","MenuContainer","MenuItem","MobileButton","SearchInput","MobileSearchInput","MobileNavContainer","p","$isToggled","MobileMenuItem","LogIn","$isLogIn","children","useSelector","state","userReducer","me","router","useRouter","isLogIn","logInDone","useState","useForm","handleSubmit","reset","TwitterOutlined","style","color","fontSize","Link","href","a","onClick","setIsToggled","isToggled","svg","xmlns","className","fill","viewBox","stroke","strokeWidth","path","strokeLinecap","strokeLinejoin","d","form","onSubmit","data","search","searchMobile","LoginWrapper","LogInHead","headTitle","PreAvatar","Avatar","InputAvatar","AvatarButton","avatarInput","useRef","dispatch","useDispatch","onClickAvater","useCallback","current","click","useEffect","avatarDeleteAction","avatarPaths","div","src","name","ref","onChange","e","avatarFormData","FormData","forEach","call","target","files","file","append","avatarUploadRequestAction","value","LoginForm","SubmitButton","Error","errors","signUpReducer","signUpDone","signUpLoading","formState","replace","Head","meta","charSet","title","Layout","LogInForm","email","password","passwordCheck","alert","formData","signUpRequestAction","encType","AvatarInput","Input","message","maxLength","minLength","module","exports"],"sourceRoot":""}
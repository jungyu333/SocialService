{"version":3,"file":"static/chunks/pages/search/[keyword]-47596860d87791b5.js","mappings":"qFACKA,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,oBACA,WACE,OAAO,EAAQ,U,kNCJvB,iB,6yCAgBaC,EAASC,IAAAA,IAAM,KAyD5B,UAhDA,WACE,IAAMC,GAASC,EAAAA,EAAAA,aACsCC,GAAAA,EAAAA,EAAAA,KACnD,SAACC,G,OAAqBA,EAAMC,eADtBC,EAA6CH,EAA7CG,aAAcC,EAA+BJ,EAA/BI,gBAAiBC,EAAcL,EAAdK,UAGjC,EAAcP,EAAOQ,MAAnBC,QACFC,GAAWC,EAAAA,EAAAA,MACKC,EAAW,GAAXA,EAAAA,EAAAA,MAAW,GAA1BC,EAAeD,EAAW,GAArBE,EAAUF,EAAW,GASjC,OAPAG,EAAAA,EAAAA,YAAU,WACR,GAAID,GAAUT,IAAiBC,EAAiB,C,IAC/BC,EAATS,EAAwC,QAA/BT,EAAAA,EAAUA,EAAUU,OAAS,UAAE,IAA/BV,OAAAA,EAAAA,EAAiCW,GAEhDR,GAASS,EAAAA,EAAAA,IAAyB,CAAEH,OAAQA,EAAQP,QAASA,QAE9D,CAACK,EAAQP,EAAWF,EAAcC,KAEnC,SAACc,EAAAA,EAAM,C,UACL,UAACC,MAAG,CAACC,UAAU,iB,WACb,UAACxB,EAAM,C,UAAC,IAAEW,EAAQ,iCACR,OAATF,QAAS,IAATA,OAAAA,EAAAA,EAAWgB,KAAI,SAACC,GACf,gBAACC,EAAAA,E,uUAAQ,IAAoBD,GAAV,OAAJA,QAAI,IAAJA,OAAAA,EAAAA,EAAMN,QAEvB,SAACG,MAAG,CACFC,UAAU,MACVT,IAAKR,IAAiBC,EAAkBO,OAAMa,W,6KClDxD,kB,+GAmEA,UAnDA,WACE,IAAMhB,GAAWC,EAAAA,EAAAA,MACXX,GAASC,EAAAA,EAAAA,aACsCC,GAAAA,EAAAA,EAAAA,KACnD,SAACC,G,OAAqBA,EAAMC,eADtBG,EAA6CL,EAA7CK,UAAWD,EAAkCJ,EAAlCI,gBAAiBD,EAAiBH,EAAjBG,aAG9B,EAAcL,EAAOQ,MAAnBmB,QACgBf,GAAAA,EAAAA,EAAAA,MAAhBC,EAAgBD,EAAhBC,IAAKC,EAAWF,EAAXE,OAUb,OARAC,EAAAA,EAAAA,YAAU,WACR,GAAID,GAAUT,IAAiBC,EAAiB,C,IAC/BC,EAATS,EAAwC,QAA/BT,EAAAA,EAAUA,EAAUU,OAAS,UAAE,IAA/BV,OAAAA,EAAAA,EAAiCW,GAEhDR,GAASkB,EAAAA,EAAAA,IAAwB,CAAEZ,OAAQA,EAAQW,QAASA,QAE7D,CAACb,EAAQT,EAAcC,EAAiBC,EAAWoB,KAGpD,SAACP,EAAAA,EAAM,C,UACL,UAACC,MAAG,CAACC,UAAU,iB,WACb,UAACxB,EAAAA,OAAM,C,UAAC,IAAE6B,EAAQ,iCACR,OAATpB,QAAS,IAATA,OAAAA,EAAAA,EAAWgB,KAAI,SAACC,GACf,gBAACC,EAAAA,E,uUAAQ,IAAoBD,GAAV,OAAJA,QAAI,IAAJA,OAAAA,EAAAA,EAAMN,QAEvB,SAACG,MAAG,CACFC,UAAU,OACVT,IAAKR,IAAiBC,EAAkBO,OAAMa,Y","sources":["webpack://_N_E/?a485","webpack://_N_E/./pages/hashtag/[hashtag].tsx","webpack://_N_E/./pages/search/[keyword].tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/search/[keyword]\",\n      function () {\n        return require(\"private-next-pages/search/[keyword].tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/search/[keyword]\"])\n      });\n    }\n  ","import React, { useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport tw from \"tailwind-styled-components\";\r\nimport { useRouter } from \"next/router\";\r\nimport wrapper from \"../../store/configureStore\";\r\nimport { GetServerSideProps } from \"next\";\r\nimport axios from \"axios\";\r\nimport { myInfoLoadRequestAction } from \"../../action/userAction\";\r\nimport { END } from \"redux-saga\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { hashtagLoadRequestAction } from \"../../action/postActions\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../reducers\";\r\nimport PostCard from \"../../components/PostCard\";\r\n\r\nexport const Header = tw.div`\r\n  max-w-sm\r\n  mx-auto\r\n  sm:max-w-md\r\n  text-2xl\r\n  font-bold\r\n  text-indigo-700\r\n`;\r\n\r\nfunction Hashtag() {\r\n  const router = useRouter();\r\n  const { hasMorePosts, postLoadLoading, mainPosts } = useSelector(\r\n    (state: RootState) => state.postReducer\r\n  );\r\n  const { hashtag } = router.query;\r\n  const dispatch = useDispatch();\r\n  const [ref, inView] = useInView();\r\n\r\n  useEffect(() => {\r\n    if (inView && hasMorePosts && !postLoadLoading) {\r\n      const lastId = mainPosts[mainPosts.length - 1]?.id;\r\n\r\n      dispatch(hashtagLoadRequestAction({ lastId: lastId, hashtag: hashtag }));\r\n    }\r\n  }, [inView, mainPosts, hasMorePosts, postLoadLoading]);\r\n  return (\r\n    <Layout>\r\n      <div className=\"relative mt-10\">\r\n        <Header>'{hashtag}' 검색 결과</Header>\r\n        {mainPosts?.map((post) => (\r\n          <PostCard key={post?.id} {...post} />\r\n        ))}\r\n        <div\r\n          className=\"h-3\"\r\n          ref={hasMorePosts && !postLoadLoading ? ref : undefined}\r\n        />\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport const getServerSideProps: GetServerSideProps =\r\n  wrapper.getServerSideProps((store) => async (context) => {\r\n    const cookie = context.req ? context.req.headers.cookie : \"\";\r\n    axios.defaults.headers.common.Cookie = \"\";\r\n    if (context.req && cookie) {\r\n      axios.defaults.headers.common.Cookie = cookie;\r\n    }\r\n\r\n    store.dispatch(myInfoLoadRequestAction());\r\n    store.dispatch(END);\r\n    await store.sagaTask.toPromise();\r\n    return {\r\n      props: {},\r\n    };\r\n  });\r\n\r\nexport default Hashtag;\r\n","import axios from \"axios\";\r\nimport { GetServerSideProps } from \"next\";\r\nimport { useRouter } from \"next/router\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { END } from \"redux-saga\";\r\nimport { searchLoadRequestAction } from \"../../action/postActions\";\r\nimport { myInfoLoadRequestAction } from \"../../action/userAction\";\r\nimport Layout from \"../../components/Layout\";\r\nimport PostCard from \"../../components/PostCard\";\r\nimport { RootState } from \"../../reducers\";\r\nimport wrapper from \"../../store/configureStore\";\r\nimport { Header } from \"../hashtag/[hashtag]\";\r\n\r\nfunction Search() {\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  const { mainPosts, postLoadLoading, hasMorePosts } = useSelector(\r\n    (state: RootState) => state.postReducer\r\n  );\r\n  const { keyword } = router.query;\r\n  const { ref, inView } = useInView();\r\n\r\n  useEffect(() => {\r\n    if (inView && hasMorePosts && !postLoadLoading) {\r\n      const lastId = mainPosts[mainPosts.length - 1]?.id;\r\n\r\n      dispatch(searchLoadRequestAction({ lastId: lastId, keyword: keyword }));\r\n    }\r\n  }, [inView, hasMorePosts, postLoadLoading, mainPosts, keyword]);\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"relative mt-10\">\r\n        <Header>'{keyword}' 검색 결과</Header>\r\n        {mainPosts?.map((post) => (\r\n          <PostCard key={post?.id} {...post} />\r\n        ))}\r\n        <div\r\n          className=\"h-10\"\r\n          ref={hasMorePosts && !postLoadLoading ? ref : undefined}\r\n        />\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport const getServerSideProps: GetServerSideProps =\r\n  wrapper.getServerSideProps((store) => async (context) => {\r\n    const cookie = context.req ? context.req.headers.cookie : \"\";\r\n    axios.defaults.headers.common.Cookie = \"\";\r\n    if (context.req && cookie) {\r\n      axios.defaults.headers.common.Cookie = cookie;\r\n    }\r\n\r\n    store.dispatch(myInfoLoadRequestAction());\r\n\r\n    store.dispatch(END);\r\n    await store.sagaTask.toPromise();\r\n\r\n    return {\r\n      props: {},\r\n    };\r\n  });\r\n\r\nexport default Search;\r\n"],"names":["window","__NEXT_P","push","Header","tw","router","useRouter","useSelector","state","postReducer","hasMorePosts","postLoadLoading","mainPosts","query","hashtag","dispatch","useDispatch","useInView","ref","inView","useEffect","lastId","length","id","hashtagLoadRequestAction","Layout","div","className","map","post","PostCard","undefined","keyword","searchLoadRequestAction"],"sourceRoot":""}
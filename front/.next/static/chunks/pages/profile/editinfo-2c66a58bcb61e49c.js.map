{"version":3,"file":"static/chunks/pages/profile/editinfo-2c66a58bcb61e49c.js","mappings":"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","sources":["webpack://_N_E/?d68b","webpack://_N_E/./components/Input.tsx","webpack://_N_E/./components/Layout.tsx","webpack://_N_E/./components/LogInForm.tsx","webpack://_N_E/./pages/profile/editinfo.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/profile/editinfo\",\n      function () {\n        return require(\"private-next-pages/profile/editinfo.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/profile/editinfo\"])\n      });\n    }\n  ","import React from \"react\";\r\nimport { UseFormRegisterReturn } from \"react-hook-form\";\r\nimport tw from \"tailwind-styled-components\";\r\n\r\nconst InputItem = tw.input`\r\n  w-full\r\n  rounded-md\r\n  p-2\r\n  placeholder:text-gray-300\r\n  focus:outline-indigo-700\r\n`;\r\n\r\ninterface InputProps {\r\n  type: \"email\" | \"password\" | \"text\";\r\n  placeholder: String;\r\n  register: UseFormRegisterReturn;\r\n  required?: boolean;\r\n}\r\n\r\nfunction Input({ type, placeholder, register, required }: InputProps) {\r\n  return (\r\n    <>\r\n      {type === \"email\" ? (\r\n        <InputItem\r\n          autoComplete=\"off\"\r\n          {...register}\r\n          type={type}\r\n          placeholder={placeholder}\r\n          required={required}\r\n        />\r\n      ) : null}\r\n      {type === \"password\" ? (\r\n        <InputItem\r\n          autoComplete=\"off\"\r\n          {...register}\r\n          type={type}\r\n          placeholder={placeholder}\r\n          required={required}\r\n        />\r\n      ) : null}\r\n      {type === \"text\" ? (\r\n        <InputItem\r\n          autoComplete=\"off\"\r\n          {...register}\r\n          type={type}\r\n          placeholder={placeholder}\r\n          required={required}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import { TwitterOutlined } from \"@ant-design/icons\";\r\nimport Link from \"next/link\";\r\nimport { useRouter } from \"next/router\";\r\nimport React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useSelector } from \"react-redux\";\r\nimport tw from \"tailwind-styled-components\";\r\n\r\nimport { RootState } from \"../reducers\";\r\n\r\nconst Wrapper = tw.div`\r\n`;\r\n\r\nconst NavContainer = tw.nav`\r\n  flex\r\n  justify-between\r\n  items-center\r\n  border-b-1\r\n  h-16\r\n  px-10\r\n  bg-gray-100\r\n`;\r\n\r\nconst MenuContainer = tw.div`\r\n  flex\r\n  items-center\r\n  w-full\r\n  max-w-xl\r\n  space-x-10\r\n`;\r\n\r\nconst MenuItem = tw.div`\r\n  hidden\r\n  cursor-pointer\r\n  sm:flex text-gray-500 hover:text-indigo-700 hover:border-b-[1px] hover:font-bold\r\n`;\r\n\r\nconst MobileButton = tw.button`\r\n  sm:hidden\r\n`;\r\n\r\nconst SearchInput = tw.input`\r\n  hidden\r\n  sm:flex\r\n  p-2\r\n  bg-transparent\r\n  placeholder:text-gray-400\r\n  focus:outline-indigo-700\r\n  rounded-md\r\n \r\n`;\r\n\r\nconst MobileSearchInput = tw.input`\r\n  p-2\r\n  bg-transparent\r\n  placeholder:text-gray-300\r\n  focus:outline-indigo-700\r\n  rounded-md\r\n`;\r\n\r\nconst MobileNavContainer = tw.nav<IsToggeldProps>`\r\n  ${(p) =>\r\n    p.$isToggled\r\n      ? \"py-4 shadow-md absolute w-full flex-col z-10 justify-center bg-gray-100 text-gray-500 space-y-2 px-2 \"\r\n      : \"hidden\"}\r\n  sm:hidden\r\n  \r\n`;\r\n\r\ninterface IsToggeldProps {\r\n  $isToggled: boolean;\r\n}\r\n\r\nconst MobileMenuItem = tw.div`\r\n  hover:font-bold \r\n  hover:text-indigo-700\r\n  cursor-pointer\r\n`;\r\n\r\nconst LogIn = tw.a<LogInProps>`\r\n  ${(p) => (p.$isLogIn ? \"hidden\" : \"visible\")}\r\n`;\r\n\r\ninterface LogInProps {\r\n  $isLogIn: boolean;\r\n}\r\nconst Layout = ({ children }) => {\r\n  const { me } = useSelector((state: RootState) => state.userReducer);\r\n  const router = useRouter();\r\n  const isLogIn = useSelector(\r\n    (state: RootState) => state.userReducer.logInDone\r\n  );\r\n  const [isToggled, setIsToggled] = useState(false);\r\n  const onClickMenu = () => {\r\n    setIsToggled(!isToggled);\r\n  };\r\n\r\n  const { register, handleSubmit, reset } = useForm();\r\n  const onSearchMobileValid = (data) => {\r\n    router.push(`/search/${data.searchMobile}`);\r\n    reset();\r\n  };\r\n\r\n  const onSearchValid = (data) => {\r\n    router.push(`/search/${data.search}`);\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <NavContainer>\r\n        <MenuContainer>\r\n          <TwitterOutlined style={{ color: \"#4F46E5 \", fontSize: \"24px\" }} />\r\n          <MenuItem>\r\n            <Link href=\"/\">\r\n              <a>홈</a>\r\n            </Link>\r\n          </MenuItem>\r\n          {me ? (\r\n            <MenuItem>\r\n              <Link href=\"/profile\">\r\n                <a>마이페이지</a>\r\n              </Link>\r\n            </MenuItem>\r\n          ) : null}\r\n          {!isLogIn ? (\r\n            <MenuItem>\r\n              <Link href=\"/signin\">\r\n                <LogIn $isLogIn={me}>로그인</LogIn>\r\n              </Link>\r\n            </MenuItem>\r\n          ) : null}\r\n        </MenuContainer>\r\n        <MobileButton onClick={onClickMenu}>\r\n          {!isToggled ? (\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"h-6 w-6 hover:text-indigo-600\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n              strokeWidth=\"2\"\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                d=\"M4 6h16M4 12h16M4 18h16\"\r\n              />\r\n            </svg>\r\n          ) : (\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"h-6 w-6 hover:text-indigo-600\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n              strokeWidth=\"2\"\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                d=\"M6 18L18 6M6 6l12 12\"\r\n              />\r\n            </svg>\r\n          )}\r\n        </MobileButton>\r\n        <form onSubmit={handleSubmit(onSearchValid)}>\r\n          <SearchInput\r\n            autoComplete=\"off\"\r\n            {...register(\"search\")}\r\n            placeholder=\"search\"\r\n          />\r\n        </form>\r\n      </NavContainer>\r\n      <MobileNavContainer $isToggled={isToggled}>\r\n        <MobileMenuItem>\r\n          <Link href=\"/\">\r\n            <a>홈</a>\r\n          </Link>\r\n        </MobileMenuItem>\r\n        <MobileMenuItem>\r\n          {me ? (\r\n            <Link href=\"/profile\">\r\n              <a>마이페이지</a>\r\n            </Link>\r\n          ) : null}\r\n        </MobileMenuItem>\r\n        {!isLogIn ? (\r\n          <MobileMenuItem>\r\n            <Link href=\"/signin\">\r\n              <LogIn $isLogIn={me}>로그인</LogIn>\r\n            </Link>\r\n          </MobileMenuItem>\r\n        ) : null}\r\n        <form onSubmit={handleSubmit(onSearchMobileValid)}>\r\n          <MobileSearchInput\r\n            autoComplete=\"off\"\r\n            {...register(\"searchMobile\")}\r\n            placeholder=\"search\"\r\n          />\r\n        </form>\r\n      </MobileNavContainer>\r\n      {children}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport tw from \"tailwind-styled-components\";\r\n\r\nconst LoginWrapper = tw.div<WrapperProps>`\r\n  max-w-sm\r\n  mx-auto\r\n  bg-gray-100\r\n  mt-24\r\n  space-y-10\r\n  flex-col\r\n  text-center\r\n  rounded-md\r\n  shadow-md\r\n  sm:max-w-lg\r\n  ${(p) => (p.$isLogIn ? \" h-96\" : \"h-[45rem]\")}\r\n`;\r\n\r\nconst LogInHead = tw.div`\r\n  text-2xl\r\n  font-bold\r\n  pt-10\r\n`;\r\n\r\ninterface WrapperProps {\r\n  $isLogIn: boolean;\r\n}\r\n\r\nfunction LogInForm({ children, headTitle, isLogIn = true }) {\r\n  return (\r\n    <>\r\n      <LoginWrapper $isLogIn={isLogIn}>\r\n        <LogInHead>{headTitle}</LogInHead>\r\n        {children}\r\n      </LoginWrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LogInForm;\r\n","import React, { useCallback, useEffect, useRef } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport tw from \"tailwind-styled-components\";\r\nimport LogInForm from \"../../components/LogInForm\";\r\nimport Input from \"../../components/Input\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../reducers\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  avatarEditDeleteAction,\r\n  avatarEditRequestAction,\r\n  avatarSetAction,\r\n  editInfoRequestAction,\r\n  myInfoLoadRequestAction,\r\n} from \"../../action/userAction\";\r\nimport { useRouter } from \"next/router\";\r\nimport wrapper from \"../../store/configureStore\";\r\nimport { GetServerSideProps } from \"next\";\r\nimport axios from \"axios\";\r\nimport { END } from \"redux-saga\";\r\n\r\nconst LoginForm = tw.form`\r\n  space-y-4\r\n  px-16\r\n`;\r\n\r\nconst SubmitButton = tw.button`\r\n  text-white\r\n  hover:bg-indigo-600\r\n  hover:font-bold\r\n  border\r\n  p-2\r\n  px-4\r\n  mt-8\r\n  rounded-md\r\n  bg-indigo-400\r\n`;\r\n\r\nconst InputHead = tw.div`\r\n  text-sm\r\n  text-gray-500\r\n  text-start\r\n`;\r\n\r\nconst PreAvatar = tw.img`\r\n  rounded-full\r\n  w-16\r\n  h-16\r\n`;\r\n\r\nconst Avatar = tw.img`\r\n bg-slate-500\r\n  w-16\r\n  h-16\r\n  rounded-full\r\n`;\r\n\r\nconst InputAvatar = tw.input`\r\n  hidden\r\n`;\r\n\r\nconst AvatarButton = tw.div`\r\n  cursor-pointer\r\n  text-sm\r\n  text-gray-500\r\n  hover:text-indigo-600\r\n  hover:font-bold\r\n  border-2\r\n  rounded-md\r\n  p-2\r\n`;\r\n\r\ninterface ValidForm {\r\n  nickname: string;\r\n}\r\n\r\nfunction editinfo() {\r\n  const router = useRouter();\r\n  const avatarInput = useRef<HTMLInputElement>();\r\n  const { me, avatarPaths, editDone } = useSelector(\r\n    (state: RootState) => state.userReducer\r\n  );\r\n\r\n  const { register, handleSubmit, setValue } = useForm<ValidForm>();\r\n  const dispatch = useDispatch();\r\n  const onClickAvater = useCallback(() => {\r\n    avatarInput.current.click();\r\n  }, [avatarInput.current]);\r\n\r\n  const onChangeAvatar = (e) => {\r\n    const avatarEditFormData = new FormData();\r\n    [].forEach.call(e.target.files, (file) => {\r\n      avatarEditFormData.append(\"avataredit\", file);\r\n    });\r\n\r\n    dispatch(avatarEditRequestAction(avatarEditFormData));\r\n    e.target.value = \"\";\r\n  };\r\n\r\n  const onClickDeleteAvatar = () => {\r\n    dispatch(avatarEditDeleteAction());\r\n  };\r\n  useEffect(() => {\r\n    if (me) {\r\n      if (me.nickname) {\r\n        setValue(\"nickname\", me.nickname);\r\n      }\r\n      if (me.avatar) {\r\n        dispatch(avatarSetAction(me.avatar));\r\n      }\r\n    }\r\n  }, [me]);\r\n\r\n  useEffect(() => {\r\n    if (!me) {\r\n      router.replace(\"/\");\r\n    }\r\n  }, [me]);\r\n\r\n  const onValid = ({ nickname }: ValidForm) => {\r\n    const formData = new FormData();\r\n    formData.append(\"nickname\", nickname);\r\n\r\n    formData.append(\"avatar\", avatarPaths);\r\n\r\n    dispatch(editInfoRequestAction(formData));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (editDone) {\r\n      router.push(\"/profile\");\r\n    }\r\n  }, [editDone]);\r\n\r\n  return (\r\n    <Layout>\r\n      {me ? (\r\n        <>\r\n          <LogInForm headTitle=\"회원 정보 수정\">\r\n            <LoginForm\r\n              onSubmit={handleSubmit(onValid)}\r\n              encType=\"multipart/form-data\"\r\n            >\r\n              <div className=\"flex items-center space-x-3\">\r\n                {me?.avatar !== \"null\" ? (\r\n                  <PreAvatar src={`http://localhost:4000/${me?.avatar}`} />\r\n                ) : (\r\n                  <Avatar />\r\n                )}\r\n\r\n                {me.avatar === \"null\" ? (\r\n                  <AvatarButton onClick={onClickAvater}>이미지</AvatarButton>\r\n                ) : (\r\n                  <AvatarButton onClick={onClickDeleteAvatar}>\r\n                    초기화\r\n                  </AvatarButton>\r\n                )}\r\n              </div>\r\n              <InputAvatar\r\n                name=\"avataredit\"\r\n                type=\"file\"\r\n                ref={avatarInput}\r\n                onChange={onChangeAvatar}\r\n              />\r\n              <InputHead>Nick Name</InputHead>\r\n              <Input\r\n                register={register(\"nickname\")}\r\n                type=\"text\"\r\n                placeholder=\"Name\"\r\n              />\r\n\r\n              <div>\r\n                <SubmitButton>수정하기</SubmitButton>\r\n              </div>\r\n            </LoginForm>\r\n          </LogInForm>\r\n        </>\r\n      ) : null}\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport const getServerSideProps: GetServerSideProps =\r\n  wrapper.getServerSideProps((store) => async (context) => {\r\n    const cookie = context.req ? context.req.headers.cookie : \"\";\r\n    axios.defaults.headers.common.Cookie = \"\";\r\n    if (context.req && cookie) {\r\n      axios.defaults.headers.common.Cookie = cookie;\r\n    }\r\n\r\n    store.dispatch(myInfoLoadRequestAction());\r\n    store.dispatch(END);\r\n    await store.sagaTask.toPromise();\r\n    return {\r\n      props: {},\r\n    };\r\n  });\r\n\r\nexport default editinfo;\r\n"],"names":["window","__NEXT_P","push","InputItem","tw","type","placeholder","register","required","autoComplete","Wrapper","NavContainer","MenuContainer","MenuItem","MobileButton","SearchInput","MobileSearchInput","MobileNavContainer","p","$isToggled","MobileMenuItem","LogIn","$isLogIn","children","useSelector","state","userReducer","me","router","useRouter","isLogIn","logInDone","useState","useForm","handleSubmit","reset","TwitterOutlined","style","color","fontSize","Link","href","a","onClick","setIsToggled","isToggled","svg","xmlns","className","fill","viewBox","stroke","strokeWidth","path","strokeLinecap","strokeLinejoin","d","form","onSubmit","data","search","searchMobile","LoginWrapper","LogInHead","headTitle","LoginForm","SubmitButton","InputHead","PreAvatar","Avatar","InputAvatar","AvatarButton","avatarInput","useRef","avatarPaths","editDone","setValue","dispatch","useDispatch","onClickAvater","useCallback","current","click","useEffect","nickname","avatar","avatarSetAction","replace","Layout","LogInForm","formData","FormData","append","editInfoRequestAction","encType","div","src","avatarEditDeleteAction","name","ref","onChange","e","avatarEditFormData","forEach","call","target","files","file","avatarEditRequestAction","value","Input"],"sourceRoot":""}
{"version":3,"file":"static/chunks/14-44446c608a38cbbb.js","mappings":"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","sources":["webpack://_N_E/./components/Layout.tsx","webpack://_N_E/./components/Comment.tsx","webpack://_N_E/./components/ImageZoom.tsx","webpack://_N_E/./components/PostImage.tsx","webpack://_N_E/./components/CommentForm.tsx","webpack://_N_E/./components/PostButtons.tsx","webpack://_N_E/./components/PostContent.tsx","webpack://_N_E/./components/PostCard.tsx"],"sourcesContent":["import { TwitterOutlined } from \"@ant-design/icons\";\r\nimport Link from \"next/link\";\r\nimport { useRouter } from \"next/router\";\r\nimport React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useSelector } from \"react-redux\";\r\nimport tw from \"tailwind-styled-components\";\r\n\r\nimport { RootState } from \"../reducers\";\r\n\r\nconst Wrapper = tw.div`\r\n`;\r\n\r\nconst NavContainer = tw.nav`\r\n  flex\r\n  justify-between\r\n  items-center\r\n  border-b-1\r\n  h-16\r\n  px-10\r\n  bg-gray-100\r\n`;\r\n\r\nconst MenuContainer = tw.div`\r\n  flex\r\n  items-center\r\n  w-full\r\n  max-w-xl\r\n  space-x-10\r\n`;\r\n\r\nconst MenuItem = tw.div`\r\n  hidden\r\n  cursor-pointer\r\n  sm:flex text-gray-500 hover:text-indigo-700 hover:border-b-[1px] hover:font-bold\r\n`;\r\n\r\nconst MobileButton = tw.button`\r\n  sm:hidden\r\n`;\r\n\r\nconst SearchInput = tw.input`\r\n  hidden\r\n  sm:flex\r\n  p-2\r\n  bg-transparent\r\n  placeholder:text-gray-400\r\n  focus:outline-indigo-700\r\n  rounded-md\r\n \r\n`;\r\n\r\nconst MobileSearchInput = tw.input`\r\n  p-2\r\n  bg-transparent\r\n  placeholder:text-gray-300\r\n  focus:outline-indigo-700\r\n  rounded-md\r\n`;\r\n\r\nconst MobileNavContainer = tw.nav<IsToggeldProps>`\r\n  ${(p) =>\r\n    p.$isToggled\r\n      ? \"py-4 shadow-md absolute w-full flex-col z-10 justify-center bg-gray-100 text-gray-500 space-y-2 px-2 \"\r\n      : \"hidden\"}\r\n  sm:hidden\r\n  \r\n`;\r\n\r\ninterface IsToggeldProps {\r\n  $isToggled: boolean;\r\n}\r\n\r\nconst MobileMenuItem = tw.div`\r\n  hover:font-bold \r\n  hover:text-indigo-700\r\n  cursor-pointer\r\n`;\r\n\r\nconst LogIn = tw.a<LogInProps>`\r\n  ${(p) => (p.$isLogIn ? \"hidden\" : \"visible\")}\r\n`;\r\n\r\ninterface LogInProps {\r\n  $isLogIn: boolean;\r\n}\r\nconst Layout = ({ children }) => {\r\n  const { me } = useSelector((state: RootState) => state.userReducer);\r\n  const router = useRouter();\r\n  const isLogIn = useSelector(\r\n    (state: RootState) => state.userReducer.logInDone\r\n  );\r\n  const [isToggled, setIsToggled] = useState(false);\r\n  const onClickMenu = () => {\r\n    setIsToggled(!isToggled);\r\n  };\r\n\r\n  const { register, handleSubmit, reset } = useForm();\r\n  const onSearchMobileValid = (data) => {\r\n    router.push(`/search/${data.searchMobile}`);\r\n    reset();\r\n  };\r\n\r\n  const onSearchValid = (data) => {\r\n    router.push(`/search/${data.search}`);\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <NavContainer>\r\n        <MenuContainer>\r\n          <TwitterOutlined style={{ color: \"#4F46E5 \", fontSize: \"24px\" }} />\r\n          <MenuItem>\r\n            <Link href=\"/\">\r\n              <a>홈</a>\r\n            </Link>\r\n          </MenuItem>\r\n          {me ? (\r\n            <MenuItem>\r\n              <Link href=\"/profile\">\r\n                <a>마이페이지</a>\r\n              </Link>\r\n            </MenuItem>\r\n          ) : null}\r\n          {!isLogIn ? (\r\n            <MenuItem>\r\n              <Link href=\"/signin\">\r\n                <LogIn $isLogIn={me}>로그인</LogIn>\r\n              </Link>\r\n            </MenuItem>\r\n          ) : null}\r\n        </MenuContainer>\r\n        <MobileButton onClick={onClickMenu}>\r\n          {!isToggled ? (\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"h-6 w-6 hover:text-indigo-600\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n              strokeWidth=\"2\"\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                d=\"M4 6h16M4 12h16M4 18h16\"\r\n              />\r\n            </svg>\r\n          ) : (\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"h-6 w-6 hover:text-indigo-600\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n              strokeWidth=\"2\"\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                d=\"M6 18L18 6M6 6l12 12\"\r\n              />\r\n            </svg>\r\n          )}\r\n        </MobileButton>\r\n        <form onSubmit={handleSubmit(onSearchValid)}>\r\n          <SearchInput\r\n            autoComplete=\"off\"\r\n            {...register(\"search\")}\r\n            placeholder=\"search\"\r\n          />\r\n        </form>\r\n      </NavContainer>\r\n      <MobileNavContainer $isToggled={isToggled}>\r\n        <MobileMenuItem>\r\n          <Link href=\"/\">\r\n            <a>홈</a>\r\n          </Link>\r\n        </MobileMenuItem>\r\n        <MobileMenuItem>\r\n          {me ? (\r\n            <Link href=\"/profile\">\r\n              <a>마이페이지</a>\r\n            </Link>\r\n          ) : null}\r\n        </MobileMenuItem>\r\n        {!isLogIn ? (\r\n          <MobileMenuItem>\r\n            <Link href=\"/signin\">\r\n              <LogIn $isLogIn={me}>로그인</LogIn>\r\n            </Link>\r\n          </MobileMenuItem>\r\n        ) : null}\r\n        <form onSubmit={handleSubmit(onSearchMobileValid)}>\r\n          <MobileSearchInput\r\n            autoComplete=\"off\"\r\n            {...register(\"searchMobile\")}\r\n            placeholder=\"search\"\r\n          />\r\n        </form>\r\n      </MobileNavContainer>\r\n      {children}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport tw from \"tailwind-styled-components\";\r\nimport { commentRemoveRequestAction } from \"../action/postActions\";\r\nimport { RootState } from \"../reducers\";\r\n\r\ninterface CommentProps {\r\n  id: number;\r\n  User: {\r\n    id: number;\r\n    avatar: string;\r\n    nickname: string;\r\n  };\r\n  content: string;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  UserId: number;\r\n  PostId: number;\r\n}\r\n\r\nconst Wrapper = tw.div`\r\n  max-w-sm\r\n  sm:max-w-md\r\n  mx-auto\r\n`;\r\n\r\nconst CommentContainer = tw.div`\r\n  mt-3\r\n  pt-3\r\n  flex\r\n  items-center\r\n  space-x-4\r\n  border-t-[1px]\r\n  border-gray-300\r\n`;\r\n\r\nconst Avatar = tw.div`\r\n  bg-slate-500\r\n  w-10\r\n  h-10\r\n  rounded-full\r\n`;\r\n\r\nconst CommentBox = tw.div`\r\n  flex\r\n  justify-between\r\n  w-full\r\n`;\r\n\r\nconst Name = tw.div`\r\n  text-lg\r\n  font-bold\r\n`;\r\n\r\nconst Content = tw.div`\r\n  text-sm\r\n  text-gray-500\r\n`;\r\nfunction Comment(comment: CommentProps) {\r\n  const dispatch = useDispatch();\r\n  const { me } = useSelector((state: RootState) => state.userReducer);\r\n  const onClickCommentRemove = () => {\r\n    dispatch(\r\n      commentRemoveRequestAction({\r\n        commentId: comment.id,\r\n        postId: comment.PostId,\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <Wrapper>\r\n      <CommentContainer>\r\n        {!comment.User.avatar || comment.User.avatar === \"null\" ? (\r\n          <Avatar />\r\n        ) : (\r\n          <img\r\n            className=\"w-10 h-10 rounded-full\"\r\n            src={`http://localhost:4000/${comment.User.avatar}`}\r\n          />\r\n        )}\r\n        <CommentBox>\r\n          <div className=\"w-3/4 space-y-2\">\r\n            <Name>{comment.User.nickname}</Name>\r\n            <Content>{comment.content}</Content>\r\n          </div>\r\n          {me?.id === comment.UserId ? (\r\n            <div className=\"flex text-xs items-start text-gray-400 space-x-1\">\r\n              <button onClick={onClickCommentRemove}>삭제</button>\r\n            </div>\r\n          ) : null}\r\n        </CommentBox>\r\n      </CommentContainer>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Comment;\r\n","import { CloseOutlined } from \"@ant-design/icons\";\r\nimport React, { useState } from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport tw from \"tailwind-styled-components\";\r\n\r\nconst Overlay = tw.div`\r\n  fixed\r\n  top-0\r\n  bottom-0\r\n  left-0\r\n  right-0\r\n  z-40\r\n  m-auto\r\n`;\r\n\r\nconst Header = tw.div`\r\n  flex\r\n  items-center\r\n  justify-center\r\n  text-center\r\n  h-16\r\n  bg-white\r\n  font-bold\r\n  text-2xl\r\n`;\r\n\r\nconst SliderWrapper = tw.div`\r\n  bg-gray-700\r\n  h-full\r\n  m-auto\r\n  flex\r\n  items-center\r\n`;\r\n\r\nconst CustomSlider = tw(Slider)`\r\n  m-auto\r\n  w-96\r\n  sm:w-10/12\r\n  sm:h-10/12\r\n`;\r\n\r\nconst Button = tw.button`\r\n  absolute\r\n  top-20\r\n  right-6\r\n  text-white\r\n  border\r\n  flex\r\n  justify-center\r\n  items-center\r\n  p-1\r\n`;\r\nfunction ImageZoom({ images, onClickClose }) {\r\n  const [currentSlide, setCurrentSlide] = useState(0);\r\n  return (\r\n    <Overlay>\r\n      <Header>\r\n        <h1>상세 이미지</h1>\r\n        <Button onClick={onClickClose}>\r\n          <CloseOutlined />\r\n        </Button>\r\n      </Header>\r\n      <SliderWrapper>\r\n        <CustomSlider\r\n          initialSlide={0}\r\n          beforeChange={(slide, newSlide) => setCurrentSlide(newSlide)}\r\n          infinite\r\n          arrows={true}\r\n          slidesToShow={1}\r\n          slidesToScroll={1}\r\n        >\r\n          {images.map((image) => (\r\n            <div className=\"m-auto\" key={image.src}>\r\n              <img\r\n                className=\"m-auto p-10 h-72 sm:h-96\"\r\n                src={`http://localhost:4000/${image.src}`}\r\n                alt={image.src}\r\n              />\r\n            </div>\r\n          ))}\r\n        </CustomSlider>\r\n      </SliderWrapper>\r\n    </Overlay>\r\n  );\r\n}\r\n\r\nexport default ImageZoom;\r\n","import { PlusOutlined } from \"@ant-design/icons\";\r\nimport React, { useState } from \"react\";\r\nimport ImageZoom from \"./ImageZoom\";\r\n\r\nfunction postImage({ images }) {\r\n  const [imageZoom, setImageZoom] = useState(false);\r\n  const onClickZoom = () => {\r\n    setImageZoom(true);\r\n  };\r\n\r\n  const onClickClose = () => {\r\n    setImageZoom(false);\r\n  };\r\n  if (images.length === 1) {\r\n    return (\r\n      <>\r\n        <img\r\n          className=\"h-96 w-full cursor-pointer\"\r\n          src={`http://localhost:4000/${images[0].src}`}\r\n          onClick={onClickZoom}\r\n        />\r\n        {imageZoom && <ImageZoom images={images} onClickClose={onClickClose} />}\r\n      </>\r\n    );\r\n  } else if (images.length === 2) {\r\n    return (\r\n      <div className=\"flex\">\r\n        <img\r\n          className=\"h-96 w-1/2  cursor-pointer  \"\r\n          src={`http://localhost:4000/${images[0].src}`}\r\n          onClick={onClickZoom}\r\n        />\r\n        <img\r\n          className=\"h-96 w-1/2  cursor-pointer \"\r\n          src={`http://localhost:4000/${images[1].src}`}\r\n          onClick={onClickZoom}\r\n        />\r\n        {imageZoom && <ImageZoom images={images} onClickClose={onClickClose} />}\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"flex\">\r\n        <img\r\n          className=\"h-96 w-1/2  cursor-pointer\"\r\n          src={`http://localhost:4000/${images[0].src}`}\r\n          onClick={onClickZoom}\r\n        />\r\n        <div className=\"h-96 w-1/2 flex justify-center items-center \">\r\n          <div\r\n            onClick={onClickZoom}\r\n            className=\"text-sm text-center text-gray-500 hover:font-bold hover:text-indigo-600 cursor-pointer\"\r\n          >\r\n            <PlusOutlined className=\"text-2xl mb-1\" />\r\n            <div className=\"text-sm \">\r\n              {images.length - 1}\r\n              개의 사진 <br /> 더보기\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {imageZoom && <ImageZoom images={images} onClickClose={onClickClose} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default postImage;\r\n","import React from \"react\";\r\nimport { PostProps } from \"./PostCard\";\r\nimport tw from \"tailwind-styled-components\";\r\nimport { SendOutlined } from \"@ant-design/icons\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../reducers\";\r\nimport { addCommentRequestAction } from \"../action/postActions\";\r\n\r\nconst Wrapper = tw.div`\r\n  max-w-sm\r\n  sm:max-w-md\r\n  mx-auto\r\n  w-full\r\n  flex-col\r\n`;\r\nconst TextArea = tw.textarea`\r\n  w-full\r\n  p-2\r\n  mt-2\r\n  border-[1px]\r\n  border-gray-400\r\n  rounded-md\r\n  focus:outline-none\r\n  focus:ring-1\r\n  focus:ring-indigo-600\r\n  text-sm\r\n  text-gray-500\r\n  scrollbar-hide\r\n`;\r\n\r\nconst SubmitButton = tw.button`\r\n  hover:text-indigo-600\r\n  text-lg\r\n  pl-1\r\n  -mt-2\r\n`;\r\n\r\ninterface ValidForm {\r\n  content: string;\r\n}\r\nfunction CommentForm(post: PostProps) {\r\n  const dispatch = useDispatch();\r\n  const { id } = useSelector((state: RootState) => state.userReducer.me);\r\n  const { register, handleSubmit, reset } = useForm<ValidForm>();\r\n  const onValid = ({ content }: ValidForm) => {\r\n    dispatch(\r\n      addCommentRequestAction({ content: content, postId: post.id, userId: id })\r\n    );\r\n    reset();\r\n  };\r\n  return (\r\n    <Wrapper>\r\n      <form onSubmit={handleSubmit(onValid)}>\r\n        <TextArea\r\n          {...register(\"content\", { required: \"내용을 입력해주세요\" })}\r\n          rows={3}\r\n        />\r\n        <SubmitButton>\r\n          <SendOutlined />\r\n        </SubmitButton>\r\n      </form>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default CommentForm;\r\n","import {\r\n  CommentOutlined,\r\n  DeleteOutlined,\r\n  HeartOutlined,\r\n  HeartTwoTone,\r\n} from \"@ant-design/icons\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport tw from \"tailwind-styled-components\";\r\nimport {\r\n  addLikeRequestAction,\r\n  postDeleteRequestAction,\r\n  removeLikeRequestAction,\r\n} from \"../action/postActions\";\r\nimport { RootState } from \"../reducers\";\r\n\r\nconst ButtonWrapper = tw.div`\r\n  flex\r\n  justify-between\r\n  border-t-[1px]\r\n  border-gray-400\r\n  h-9\r\n  pt-2\r\n  mt-2\r\n`;\r\n\r\nconst IconBox = tw.div`\r\n  w-1/3\r\n  text-center\r\n  text-lg\r\n  h-full\r\n  hover:shadow-sm\r\n  flex\r\n  items-center\r\n  justify-center\r\n  cursor-pointer\r\n  hover:text-indigo-600\r\n  \r\n`;\r\n\r\nfunction PostButtons({ postId, Likers, setCommentOpened }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const { me } = useSelector((state: RootState) => state.userReducer);\r\n\r\n  const onClickComment = () => {\r\n    if (!me) {\r\n      alert(\"로그인이 필요합니다.\");\r\n    } else {\r\n      setCommentOpened((prev) => !prev);\r\n    }\r\n  };\r\n  const onClickDeletePost = () => {\r\n    dispatch(postDeleteRequestAction(postId));\r\n  };\r\n\r\n  const onClickLike = () => {\r\n    if (!me) {\r\n      alert(\"로그인이 필요합니다.\");\r\n    } else {\r\n      dispatch(addLikeRequestAction(postId));\r\n    }\r\n  };\r\n\r\n  const onClickUnLike = () => {\r\n    if (!me) {\r\n      alert(\"로그인이 필요합니다.\");\r\n    } else {\r\n      dispatch(removeLikeRequestAction(postId));\r\n    }\r\n  };\r\n  const isLike = Likers.find((like) => like.id === me?.id);\r\n\r\n  return (\r\n    <ButtonWrapper>\r\n      <IconBox onClick={onClickDeletePost}>\r\n        <DeleteOutlined />\r\n      </IconBox>\r\n\r\n      {isLike ? (\r\n        <IconBox onClick={onClickUnLike}>\r\n          <HeartTwoTone twoToneColor=\"#eb2f96\" />\r\n        </IconBox>\r\n      ) : (\r\n        <IconBox onClick={onClickLike}>\r\n          <HeartOutlined />\r\n        </IconBox>\r\n      )}\r\n      <IconBox onClick={onClickComment}>\r\n        <CommentOutlined />\r\n      </IconBox>\r\n    </ButtonWrapper>\r\n  );\r\n}\r\n\r\nexport default PostButtons;\r\n","import Link from \"next/link\";\r\nimport React from \"react\";\r\n\r\nfunction PostContent({ postData }) {\r\n  return (\r\n    <div>\r\n      {postData?.split(/(#[^\\s#]+)/g).map((hash, index) => {\r\n        if (hash.match(/(#[^\\s#]+)/)) {\r\n          return (\r\n            <Link key={index} href={`/hashtag/${hash.slice(1)}`}>\r\n              <a className=\"text-indigo-400\">{hash}</a>\r\n            </Link>\r\n          );\r\n        }\r\n        return hash;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostContent;\r\n","import React, { useState } from \"react\";\r\nimport tw from \"tailwind-styled-components\";\r\nimport Comment from \"./Comment\";\r\nimport PostImage from \"../components/PostImage\";\r\n\r\nimport CommentForm from \"./CommentForm\";\r\nimport PostButtons from \"./PostButtons\";\r\nimport PostContent from \"./PostContent\";\r\nimport Link from \"next/link\";\r\n\r\nconst Wrapper = tw.div`\r\n  max-w-sm\r\n  mx-auto\r\n  sm:max-w-md\r\n  border-2\r\n  shadow-sm\r\n  flex-col\r\n  justify-center\r\n  mt-4\r\n  mb-2\r\n`;\r\n\r\nconst ContentWrapper = tw.div`\r\n  p-2\r\n  w-full\r\n`;\r\n\r\nconst ContentContainer = tw.div`\r\n  flex\r\n  items-center\r\n  space-x-4\r\n  w-full\r\n`;\r\n\r\nconst Avatar = tw.div`\r\n  bg-slate-500\r\n  rounded-full\r\n  w-12\r\n  h-12\r\n`;\r\n\r\nconst ContentInfo = tw.div`\r\n  flex-col\r\n  justify-start\r\n  space-y-2\r\n  items-start\r\n  w-full\r\n`;\r\n\r\nconst Name = tw.div`\r\n  text-lg\r\n  font-bold\r\n`;\r\n\r\nconst CommentCount = tw.div`\r\n  text-sm\r\n  text-gray-500\r\n  mt-2\r\n`;\r\n\r\nexport interface PostProps {\r\n  id: number;\r\n  User: { id: number; nickname: string; avatar: string };\r\n  UserId: number;\r\n  content: string;\r\n  Comments: {\r\n    id: number;\r\n    User: {\r\n      id: number;\r\n      avatar: string;\r\n      nickname: string;\r\n    };\r\n    content: string;\r\n    createdAt: string;\r\n    updatedAt: string;\r\n    UserId: number;\r\n    PostId: number;\r\n  }[];\r\n  Images: {\r\n    id: number;\r\n    src: string;\r\n    createdAt: string;\r\n    updatedAt: string;\r\n    PostId: number;\r\n  }[];\r\n  Likers: { id: number }[];\r\n  createdAt: string;\r\n  updatedAt: string;\r\n}\r\n\r\nfunction PostCard(post: PostProps) {\r\n  const [commentOpened, setCommentOpened] = useState(false);\r\n\r\n  return (\r\n    <Wrapper>\r\n      {post.Images?.length > 0 ? <PostImage images={post.Images} /> : null}\r\n      <ContentWrapper>\r\n        <ContentContainer>\r\n          <div>\r\n            {!post.User?.avatar || post.User?.avatar === \"null\" ? (\r\n              <Avatar />\r\n            ) : (\r\n              <img\r\n                className=\"rounded-full w-12 h-12\"\r\n                src={`http://localhost:4000/${post.User.avatar}`}\r\n              />\r\n            )}\r\n          </div>\r\n          <ContentInfo>\r\n            <Link href={`/user/${post.UserId}`}>\r\n              <a>\r\n                <Name>{post.User?.nickname}</Name>\r\n              </a>\r\n            </Link>\r\n\r\n            <PostContent postData={post.content} />\r\n          </ContentInfo>\r\n        </ContentContainer>\r\n        <PostButtons\r\n          postId={post.id}\r\n          Likers={post.Likers}\r\n          setCommentOpened={setCommentOpened}\r\n        />\r\n        {commentOpened ? (\r\n          <>\r\n            <CommentForm {...post} />\r\n            <div className=\"flex space-x-2\">\r\n              <CommentCount>{post.Comments.length} 개의 댓글</CommentCount>\r\n              <div className=\" text-sm text-gray-500 mt-2\">\r\n                {post.Likers.length} 개의 좋아요\r\n              </div>\r\n            </div>\r\n\r\n            {post.Comments.map((comment) => (\r\n              <Comment key={comment.id} {...comment} />\r\n            ))}\r\n          </>\r\n        ) : null}\r\n      </ContentWrapper>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default PostCard;\r\n"],"names":["Wrapper","tw","NavContainer","MenuContainer","MenuItem","MobileButton","SearchInput","MobileSearchInput","MobileNavContainer","p","$isToggled","MobileMenuItem","LogIn","$isLogIn","children","useSelector","state","userReducer","me","router","useRouter","isLogIn","logInDone","useState","useForm","register","handleSubmit","reset","TwitterOutlined","style","color","fontSize","Link","href","a","onClick","setIsToggled","isToggled","svg","xmlns","className","fill","viewBox","stroke","strokeWidth","path","strokeLinecap","strokeLinejoin","d","form","onSubmit","data","push","search","autoComplete","placeholder","searchMobile","CommentContainer","Avatar","CommentBox","Name","Content","comment","dispatch","useDispatch","User","avatar","img","src","div","nickname","content","id","UserId","button","commentRemoveRequestAction","commentId","postId","PostId","Overlay","Header","SliderWrapper","CustomSlider","Slider","Button","images","onClickClose","h1","CloseOutlined","initialSlide","beforeChange","slide","newSlide","setCurrentSlide","infinite","arrows","slidesToShow","slidesToScroll","map","image","alt","onClickZoom","setImageZoom","length","imageZoom","ImageZoom","PlusOutlined","br","TextArea","SubmitButton","post","addCommentRequestAction","userId","required","rows","SendOutlined","ButtonWrapper","IconBox","Likers","setCommentOpened","isLike","find","like","postDeleteRequestAction","DeleteOutlined","removeLikeRequestAction","alert","HeartTwoTone","twoToneColor","addLikeRequestAction","HeartOutlined","prev","CommentOutlined","postData","split","hash","index","match","slice","ContentWrapper","ContentContainer","ContentInfo","CommentCount","Images","PostImage","PostContent","PostButtons","commentOpened","CommentForm","Comments","Comment"],"sourceRoot":""}
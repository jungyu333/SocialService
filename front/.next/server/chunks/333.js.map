{"version":3,"file":"333.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAyC;AACI;AACD;AACJ;AACS;AAEvB;AACwC;AACjC;AACS;AAC0B;AACZ;AACd;AAEO;AAE1C,MAAMc,MAAM,GAAGX,uEAAM,CAAC;AAS7B,SAASa;IACP,MAAMC;IACN,MAAM,EAAEC;IACiC,CACxC;IACD,MAAM,EAAEK;IACR,MAAME,QAAQ;;IAGdxB,SAAS,CAAC,IAAM;QACd,IAAI0B,MAAM,CAAC,sDAAGT;YACZ,MAAMU,MAAM,GAAGR,SAAS,CAACA,SAAS,CAACS,MAAM,GAAG,CAAC,CAAC,EAAEC,wDAAE;;gBAEdF,MAAM,EAAEA,MAAM;gBAAEL,KAAAA,wDAAgB;aAAE,CAAC,CAAC,CAAC;oDAC1E;KACF,EAAE;QAACI,MAAM;QAAEP,SAAS;QAAEF,YAAY;QAAEC,eAAe;KAAC,CAAC,CAAC;IACvD;;YAESY;;;;;wBACOR,CAAAA,kDAAAA,CAAAA,mEAAO;wBAAC;;kBAAgB;gBACjCH,SAAS,EAAEY,GAAG,uDAAEC,CAAI;wBACO,GAAGA,IAAI;uBAAlBA,IAAI;gBACpB,CAAC;8BACF,KAAClB,KAAG;oBACFgB;;kBAEA;;UACE;MACC,CACT;CACH;AAED,OAAO,MAAMI,kBAAkB,GAC7B9B;QACE,MAAMiC,MAAM,GAAGD,OAAO,CAACE,GAAG,GAAGF,OAAO,CAACE,GAAG,CAACC,OAAO,CAACF,MAAM,GAAG,EAAE;QAC5DhC,KAAK,CAACmC;QACN,IAAIJ;;;;CAKJD,KAAK,CAACX,QAAQ,CAACjB,GAAG,CAAC,CAAC;QACpB,MAAM4B,KAAK,CAACQ,QAAQ,CAACC,SAAS,EAAE,CAAC;QACjC,6EAAO;YACLC,KAAK,EAAE,EAAE;SACV,CAAC;KACH;AAAA,CAAC,CAAC;AAEL,eAAe9B,OAAO,CAAC","sources":["webpack://react-social-app/./pages/hashtag/[hashtag].tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport tw from \"tailwind-styled-components\";\r\nimport { useRouter } from \"next/router\";\r\nimport wrapper from \"../../store/configureStore\";\r\nimport { GetServerSideProps } from \"next\";\r\nimport axios from \"axios\";\r\nimport { myInfoLoadRequestAction } from \"../../action/userAction\";\r\nimport { END } from \"redux-saga\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { hashtagLoadRequestAction } from \"../../action/postActions\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../reducers\";\r\nimport PostCard from \"../../components/PostCard\";\r\n\r\nexport const Header = tw.div`\r\n  max-w-sm\r\n  mx-auto\r\n  sm:max-w-md\r\n  text-2xl\r\n  font-bold\r\n  text-indigo-700\r\n`;\r\n\r\nfunction Hashtag() {\r\n  const router = useRouter();\r\n  const { hasMorePosts, postLoadLoading, mainPosts } = useSelector(\r\n    (state: RootState) => state.postReducer\r\n  );\r\n  const { hashtag } = router.query;\r\n  const dispatch = useDispatch();\r\n  const [ref, inView] = useInView();\r\n\r\n  useEffect(() => {\r\n    if (inView && hasMorePosts && !postLoadLoading) {\r\n      const lastId = mainPosts[mainPosts.length - 1]?.id;\r\n\r\n      dispatch(hashtagLoadRequestAction({ lastId: lastId, hashtag: hashtag }));\r\n    }\r\n  }, [inView, mainPosts, hasMorePosts, postLoadLoading]);\r\n  return (\r\n    <Layout>\r\n      <div className=\"relative mt-10\">\r\n        <Header>'{hashtag}' 검색 결과</Header>\r\n        {mainPosts?.map((post) => (\r\n          <PostCard key={post?.id} {...post} />\r\n        ))}\r\n        <div\r\n          className=\"h-3\"\r\n          ref={hasMorePosts && !postLoadLoading ? ref : undefined}\r\n        />\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport const getServerSideProps: GetServerSideProps =\r\n  wrapper.getServerSideProps((store) => async (context) => {\r\n    const cookie = context.req ? context.req.headers.cookie : \"\";\r\n    axios.defaults.headers.common.Cookie = \"\";\r\n    if (context.req && cookie) {\r\n      axios.defaults.headers.common.Cookie = cookie;\r\n    }\r\n\r\n    store.dispatch(myInfoLoadRequestAction());\r\n    store.dispatch(END);\r\n    await store.sagaTask.toPromise();\r\n    return {\r\n      props: {},\r\n    };\r\n  });\r\n\r\nexport default Hashtag;\r\n"],"names":["React","useEffect","Layout","tw","useRouter","wrapper","axios","myInfoLoadRequestAction","END","useDispatch","hashtagLoadRequestAction","useInView","useSelector","PostCard","Header","div","Hashtag","router","hasMorePosts","postLoadLoading","mainPosts","state","postReducer","hashtag","query","dispatch","ref","inView","lastId","length","id","className","map","post","undefined","getServerSideProps","store","context","cookie","req","headers","defaults","common","Cookie","sagaTask","toPromise","props"],"sourceRoot":""}
{"version":3,"file":"943.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAoD;AACvB;AACW;AACA;AACE;AACA;AACE;AAI5C,MAAMQ,OAAO,GAAGD,uEAAM,CAAC;AAGvB;AAUA,MAAMK,aAAa,yEAAMH,CAAG,CAAC;AAQ7B,MAAMI;AAMN,MAAMC,YAAY;AAIlB,MAAME;AAWN,MAAME;AAQN,MAAMC;AAIU,CAAC;AASjB,MAAMG;AAMN;AAC8C,CAAC,EAC/C,CAAC;AAKD,MAAMI;IACJ,MAAM,EAAEE,EAAE;IAAwD,CAAC;IACnE,MAAMG;IACN,MAAMC;;IAGN,MAAM,EA5FR,GA4FSE,EAAAA,uEAAAA,CAAS;IAChB;QACEC;KACD;;IAGD,MAAMK,WAAAA,0EAAmB,EAAG;QAC1BT;;KAED;IAED;QACEA;;KAED;IAED,qBACE;;;;;;;;;;;;;0CAKQ,mBAAC9B,IAAI;;;;;;;;;;;;;;8BASM,GACT;4EACF+B,KAAO,iBACP,KAACnB;;;2FAEG,mBAACU;;+FAAoB;;;;;sBAIb;kCAChB,KAACT,YAAY;;;4BAGPsC,KAAK,EAAC;4BACNC,SAAS,EAAC;;;gFAGVG,IAAM,EAAC;;wFAGP;;gCAEEI,EAAAA,uDAAAA,OAAc,EAAC,OAAO;gCACtBC,CAAC,EAAC;8BACF;0BACE;4BAGJT,KAAK,EAAC;4BACNC,SAAS,EAAC;4BACVC,IAAI;4BACJC;4BACAC,MAAM,EAAC,4DAAc;4BACrBC,WAAW,EAAC,GAAG;sCAEf;gCACEE,aAAa,EAAC,OAAO;gCACrBC,cAAc,EAAC,OAAO;gCACtBC,CAAC,EAAC;8BACF;0BACE;sBAEK;kCACf,KAACC,MAAI;wBAACC,QAAQ,EAAEzB,YAAY,CAACM;kCAC3B,mBAAC5B,OAAAA,kDAAW;4BACVgD,YAAY,EAAC,KAAK;4BACjB,GAAG3B;4BACJ4B;0BACA;sBACG;;cACM;0BACf,MAAC9C,kBAAkB;gBAACE,UAAU,EAAEa,SAAS;;kCACvC;kCACE;4BAAMe,IAAI,EAAC,GAAG;;;8BACF;0BACH;sBACM;kCACjB,KAAC3B,cAAc;kCACZM,EAAE,iBACD,KAAC3B,IAAI;4BAACgD,IAAI,EAAC;sCACT;0CAAG;8BAAmB;0BACP,GACf,IAAI;sBACO;oBAChB,CAACjB,OAAO,iBACP,KAACV;kCACC,mBAACrB,IAAI;4BAACgD;sCACJ;gCAAOxB,QAAQ,EAAEG,EAAE;0CAAE,oBAAG;8BAAQ;0BAC3B;sBACQ,GACf,IAAI;kCACR,KAACkC,MAAI;wBAACC,QAAQ,EAAEzB,YAAY,CAACE,KAAAA,kDAAAA,UAAmB;kCAC9C,mBAACtB;4BACC8C,YAAY,EAAC,KAAK;4BACjB,GAAG3B,QAAQ,CAAC,cAAc,CAAC;4BAC5B4B;0BACA;sBACG;;cACY;YACpBtC,QAAQ;;MACD,CACV;CACH;AAED,eAAeD,MAAM,CAAC","sources":["webpack://react-social-app/./components/Layout.tsx"],"sourcesContent":["import { TwitterOutlined } from \"@ant-design/icons\";\r\nimport Link from \"next/link\";\r\nimport { useRouter } from \"next/router\";\r\nimport React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useSelector } from \"react-redux\";\r\nimport tw from \"tailwind-styled-components\";\r\n\r\nimport { RootState } from \"../reducers\";\r\n\r\nconst Wrapper = tw.div`\r\n`;\r\n\r\nconst NavContainer = tw.nav`\r\n  flex\r\n  justify-between\r\n  items-center\r\n  border-b-1\r\n  h-16\r\n  px-10\r\n  bg-gray-100\r\n`;\r\n\r\nconst MenuContainer = tw.div`\r\n  flex\r\n  items-center\r\n  w-full\r\n  max-w-xl\r\n  space-x-10\r\n`;\r\n\r\nconst MenuItem = tw.div`\r\n  hidden\r\n  cursor-pointer\r\n  sm:flex text-gray-500 hover:text-indigo-700 hover:border-b-[1px] hover:font-bold\r\n`;\r\n\r\nconst MobileButton = tw.button`\r\n  sm:hidden\r\n`;\r\n\r\nconst SearchInput = tw.input`\r\n  hidden\r\n  sm:flex\r\n  p-2\r\n  bg-transparent\r\n  placeholder:text-gray-400\r\n  focus:outline-indigo-700\r\n  rounded-md\r\n \r\n`;\r\n\r\nconst MobileSearchInput = tw.input`\r\n  p-2\r\n  bg-transparent\r\n  placeholder:text-gray-300\r\n  focus:outline-indigo-700\r\n  rounded-md\r\n`;\r\n\r\nconst MobileNavContainer = tw.nav<IsToggeldProps>`\r\n  ${(p) =>\r\n    p.$isToggled\r\n      ? \"py-4 shadow-md absolute w-full flex-col z-10 justify-center bg-gray-100 text-gray-500 space-y-2 px-2 \"\r\n      : \"hidden\"}\r\n  sm:hidden\r\n  \r\n`;\r\n\r\ninterface IsToggeldProps {\r\n  $isToggled: boolean;\r\n}\r\n\r\nconst MobileMenuItem = tw.div`\r\n  hover:font-bold \r\n  hover:text-indigo-700\r\n  cursor-pointer\r\n`;\r\n\r\nconst LogIn = tw.a<LogInProps>`\r\n  ${(p) => (p.$isLogIn ? \"hidden\" : \"visible\")}\r\n`;\r\n\r\ninterface LogInProps {\r\n  $isLogIn: boolean;\r\n}\r\nconst Layout = ({ children }) => {\r\n  const { me } = useSelector((state: RootState) => state.userReducer);\r\n  const router = useRouter();\r\n  const isLogIn = useSelector(\r\n    (state: RootState) => state.userReducer.logInDone\r\n  );\r\n  const [isToggled, setIsToggled] = useState(false);\r\n  const onClickMenu = () => {\r\n    setIsToggled(!isToggled);\r\n  };\r\n\r\n  const { register, handleSubmit, reset } = useForm();\r\n  const onSearchMobileValid = (data) => {\r\n    router.push(`/search/${data.searchMobile}`);\r\n    reset();\r\n  };\r\n\r\n  const onSearchValid = (data) => {\r\n    router.push(`/search/${data.search}`);\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <NavContainer>\r\n        <MenuContainer>\r\n          <TwitterOutlined style={{ color: \"#4F46E5 \", fontSize: \"24px\" }} />\r\n          <MenuItem>\r\n            <Link href=\"/\">\r\n              <a>홈</a>\r\n            </Link>\r\n          </MenuItem>\r\n          {me ? (\r\n            <MenuItem>\r\n              <Link href=\"/profile\">\r\n                <a>마이페이지</a>\r\n              </Link>\r\n            </MenuItem>\r\n          ) : null}\r\n          {!isLogIn ? (\r\n            <MenuItem>\r\n              <Link href=\"/signin\">\r\n                <LogIn $isLogIn={me}>로그인</LogIn>\r\n              </Link>\r\n            </MenuItem>\r\n          ) : null}\r\n        </MenuContainer>\r\n        <MobileButton onClick={onClickMenu}>\r\n          {!isToggled ? (\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"h-6 w-6 hover:text-indigo-600\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n              strokeWidth=\"2\"\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                d=\"M4 6h16M4 12h16M4 18h16\"\r\n              />\r\n            </svg>\r\n          ) : (\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"h-6 w-6 hover:text-indigo-600\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n              strokeWidth=\"2\"\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                d=\"M6 18L18 6M6 6l12 12\"\r\n              />\r\n            </svg>\r\n          )}\r\n        </MobileButton>\r\n        <form onSubmit={handleSubmit(onSearchValid)}>\r\n          <SearchInput\r\n            autoComplete=\"off\"\r\n            {...register(\"search\")}\r\n            placeholder=\"search\"\r\n          />\r\n        </form>\r\n      </NavContainer>\r\n      <MobileNavContainer $isToggled={isToggled}>\r\n        <MobileMenuItem>\r\n          <Link href=\"/\">\r\n            <a>홈</a>\r\n          </Link>\r\n        </MobileMenuItem>\r\n        <MobileMenuItem>\r\n          {me ? (\r\n            <Link href=\"/profile\">\r\n              <a>마이페이지</a>\r\n            </Link>\r\n          ) : null}\r\n        </MobileMenuItem>\r\n        {!isLogIn ? (\r\n          <MobileMenuItem>\r\n            <Link href=\"/signin\">\r\n              <LogIn $isLogIn={me}>로그인</LogIn>\r\n            </Link>\r\n          </MobileMenuItem>\r\n        ) : null}\r\n        <form onSubmit={handleSubmit(onSearchMobileValid)}>\r\n          <MobileSearchInput\r\n            autoComplete=\"off\"\r\n            {...register(\"searchMobile\")}\r\n            placeholder=\"search\"\r\n          />\r\n        </form>\r\n      </MobileNavContainer>\r\n      {children}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n"],"names":["TwitterOutlined","Link","useRouter","React","useState","useForm","useSelector","tw","Wrapper","div","NavContainer","nav","MenuContainer","MenuItem","MobileButton","button","SearchInput","input","MobileSearchInput","MobileNavContainer","p","$isToggled","MobileMenuItem","LogIn","a","$isLogIn","Layout","children","me","state","userReducer","router","isLogIn","logInDone","isToggled","setIsToggled","onClickMenu","register","handleSubmit","reset","onSearchMobileValid","data","push","searchMobile","onSearchValid","search","style","color","fontSize","href","onClick","svg","xmlns","className","fill","viewBox","stroke","strokeWidth","path","strokeLinecap","strokeLinejoin","d","form","onSubmit","autoComplete","placeholder"],"sourceRoot":""}
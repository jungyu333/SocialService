{"version":3,"file":"../pages/createuser.js","mappings":"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","sources":["webpack://react-social-app/./action/signUpAction.ts","webpack://react-social-app/./components/AvatarInput.tsx","webpack://react-social-app/./pages/createuser.tsx","webpack://react-social-app/external commonjs \"@ant-design/icons\"","webpack://react-social-app/external commonjs \"next/dist/shared/lib/head-manager-context.js\"","webpack://react-social-app/external commonjs \"next/dist/shared/lib/i18n/normalize-locale-path.js\"","webpack://react-social-app/external commonjs \"next/dist/shared/lib/is-plain-object.js\"","webpack://react-social-app/external commonjs \"next/dist/shared/lib/mitt.js\"","webpack://react-social-app/external commonjs \"next/dist/shared/lib/page-path/denormalize-page-path.js\"","webpack://react-social-app/external commonjs \"next/dist/shared/lib/router-context.js\"","webpack://react-social-app/external commonjs \"next/dist/shared/lib/router/utils/format-url.js\"","webpack://react-social-app/external commonjs \"next/dist/shared/lib/router/utils/get-asset-path-from-route.js\"","webpack://react-social-app/external commonjs \"next/dist/shared/lib/router/utils/get-middleware-regex.js\"","webpack://react-social-app/external commonjs \"next/dist/shared/lib/router/utils/is-dynamic.js\"","webpack://react-social-app/external commonjs \"next/dist/shared/lib/router/utils/parse-relative-url.js\"","webpack://react-social-app/external commonjs \"next/dist/shared/lib/router/utils/querystring.js\"","webpack://react-social-app/external commonjs \"next/dist/shared/lib/router/utils/resolve-rewrites.js\"","webpack://react-social-app/external commonjs \"next/dist/shared/lib/router/utils/route-matcher.js\"","webpack://react-social-app/external commonjs \"next/dist/shared/lib/router/utils/route-regex.js\"","webpack://react-social-app/external commonjs \"next/dist/shared/lib/utils.js\"","webpack://react-social-app/external commonjs \"next/head\"","webpack://react-social-app/external commonjs \"next/router\"","webpack://react-social-app/external commonjs \"react\"","webpack://react-social-app/external commonjs \"react-redux\"","webpack://react-social-app/external commonjs \"react/jsx-runtime\"","webpack://react-social-app/external commonjs \"tailwind-styled-components\"","webpack://react-social-app/external module \"react-hook-form\""],"sourcesContent":["import {\r\n  SIGN_UP_ERROR_INIT,\r\n  SIGN_UP_FAILURE,\r\n  SIGN_UP_REQUEST,\r\n  SIGN_UP_SUCCESS,\r\n} from \"./types\";\r\n\r\nexport const signUpRequestAction = (data) => {\r\n  return {\r\n    type: SIGN_UP_REQUEST,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const signUpSuccessAction = () => {\r\n  return {\r\n    type: SIGN_UP_SUCCESS,\r\n    data: null,\r\n  };\r\n};\r\n\r\nexport const signUpFailureAction = (data) => {\r\n  return {\r\n    type: SIGN_UP_FAILURE,\r\n    data,\r\n  };\r\n};\r\n\r\nexport type SignUpAction =\r\n  | ReturnType<typeof signUpRequestAction>\r\n  | ReturnType<typeof signUpSuccessAction>\r\n  | ReturnType<typeof signUpFailureAction>;\r\n","import React, { useCallback, useEffect, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport tw from \"tailwind-styled-components\";\r\nimport {\r\n  avatarDeleteAction,\r\n  avatarUploadRequestAction,\r\n} from \"../action/userAction\";\r\nimport { RootState } from \"../reducers\";\r\n\r\nconst PreAvatar = tw.img`\r\n  rounded-full\r\n  w-16\r\n  h-16\r\n`;\r\n\r\nconst Avatar = tw.img`\r\n bg-slate-500\r\n  w-16\r\n  h-16\r\n  rounded-full\r\n`;\r\n\r\nconst InputAvatar = tw.input`\r\n  hidden\r\n`;\r\n\r\nconst AvatarButton = tw.div`\r\n  cursor-pointer\r\n  text-sm\r\n  text-gray-500\r\n  hover:text-indigo-600\r\n  hover:font-bold\r\n  border-2\r\n  rounded-md\r\n  p-2\r\n`;\r\n\r\nfunction AvatarInput() {\r\n  const avatarInput = useRef<HTMLInputElement>();\r\n  const dispatch = useDispatch();\r\n  const onClickAvater = useCallback(() => {\r\n    avatarInput.current.click();\r\n  }, [avatarInput.current]);\r\n\r\n  const onChangeAvatar = (e) => {\r\n    const avatarFormData = new FormData();\r\n    [].forEach.call(e.target.files, (file) => {\r\n      avatarFormData.append(\"avatar\", file);\r\n    });\r\n    dispatch(avatarUploadRequestAction(avatarFormData));\r\n    e.target.value = \"\";\r\n  };\r\n\r\n  const onClickDeleteAvatar = () => {\r\n    dispatch(avatarDeleteAction());\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(avatarDeleteAction());\r\n  }, []);\r\n\r\n  const { avatarPaths, me } = useSelector(\r\n    (state: RootState) => state.userReducer\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex items-center space-x-3\">\r\n        {avatarPaths !== \"null\" ? (\r\n          <PreAvatar src={`http://localhost:4000/${avatarPaths}`} />\r\n        ) : (\r\n          <Avatar />\r\n        )}\r\n\r\n        {avatarPaths === \"null\" ? (\r\n          <AvatarButton onClick={onClickAvater}>이미지</AvatarButton>\r\n        ) : (\r\n          <AvatarButton onClick={onClickDeleteAvatar}>초기화</AvatarButton>\r\n        )}\r\n      </div>\r\n      <InputAvatar\r\n        name=\"avatar\"\r\n        type=\"file\"\r\n        ref={avatarInput}\r\n        onChange={onChangeAvatar}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AvatarInput;\r\n","import Head from \"next/head\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Input from \"../components/Input\";\r\nimport Layout from \"../components/Layout\";\r\nimport LogInForm from \"../components/LogInForm\";\r\nimport tw from \"tailwind-styled-components\";\r\nimport { useRouter } from \"next/router\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { signUpRequestAction } from \"../action/signUpAction\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../reducers\";\r\nimport AvatarInput from \"../components/AvatarInput\";\r\n\r\nconst LoginForm = tw.form`\r\n  space-y-5\r\n  px-16\r\n`;\r\n\r\nconst SubmitButton = tw.button`\r\n  text-white\r\n  hover:bg-indigo-600\r\n  hover:font-bold\r\n  border\r\n  p-2\r\n  px-4\r\n  mt-12\r\n  rounded-md\r\n  bg-indigo-400\r\n`;\r\n\r\nconst Error = tw.div`\r\n  text-red-500\r\n  text-sm\r\n  text-start\r\n`;\r\n\r\ninterface ValidForm {\r\n  email: string;\r\n  password: string;\r\n  passwordCheck: string;\r\n  name: string;\r\n}\r\n\r\nfunction createuser() {\r\n  const { signUpDone, signUpLoading } = useSelector(\r\n    (state: RootState) => state.signUpReducer\r\n  );\r\n  const dispatch = useDispatch();\r\n  const { avatarPaths } = useSelector((state: RootState) => state.userReducer);\r\n  const router = useRouter();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm<ValidForm>();\r\n  const onValid = ({ email, name, password, passwordCheck }: ValidForm) => {\r\n    if (password !== passwordCheck) {\r\n      alert(\"비밀번호가 일치하지 않습니다\");\r\n      reset({ passwordCheck: \"\" });\r\n    } else {\r\n      if (!avatarPaths) {\r\n        dispatch(signUpRequestAction({ email, name, password }));\r\n      } else {\r\n        const formData = new FormData();\r\n        formData.append(\"avatar\", avatarPaths);\r\n        formData.append(\"email\", email);\r\n        formData.append(\"name\", name);\r\n        formData.append(\"password\", password);\r\n\r\n        dispatch(signUpRequestAction(formData));\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (signUpDone) {\r\n      router.replace(\"/signin\");\r\n    }\r\n  }, [signUpDone]);\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <meta charSet=\"UTF-8\" />\r\n        <title>회원가입| Social Service</title>\r\n      </Head>\r\n      <Layout>\r\n        <LogInForm headTitle=\"회원가입\" isLogIn={false}>\r\n          <LoginForm\r\n            onSubmit={handleSubmit(onValid)}\r\n            encType=\"multipart/form-data\"\r\n          >\r\n            <AvatarInput />\r\n            <Input\r\n              register={register(\"email\", {\r\n                required: \"Email Id를 입력해주세요\",\r\n              })}\r\n              type=\"email\"\r\n              placeholder=\"Email ID\"\r\n            />\r\n            <Error>{errors.email?.message}</Error>\r\n            <Input\r\n              register={register(\"name\", {\r\n                required: \"닉네임을 입력해주세요\",\r\n                maxLength: {\r\n                  value: 10,\r\n                  message: \"닉네임은 10자 이하로 입력해주세요\",\r\n                },\r\n              })}\r\n              type=\"text\"\r\n              placeholder=\"닉네임\"\r\n            />\r\n            <Error>{errors.name?.message}</Error>\r\n            <Input\r\n              register={register(\"password\", {\r\n                required: \"비밀번호를 입력해주세요\",\r\n                minLength: {\r\n                  value: 5,\r\n                  message: \"비밀번호는 5자 이상으로 입력해주세요\",\r\n                },\r\n              })}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n            />\r\n            <Error>{errors.password?.message}</Error>\r\n            <Input\r\n              register={register(\"passwordCheck\", {\r\n                required: \"비밀번호를 다시 한번 입력해주세요\",\r\n              })}\r\n              type=\"password\"\r\n              placeholder=\"Password Check\"\r\n            />\r\n            <Error>{errors.passwordCheck?.message}</Error>\r\n            <div>\r\n              <SubmitButton>\r\n                {signUpLoading ? \"Loading...\" : \"회원가입\"}\r\n              </SubmitButton>\r\n            </div>\r\n          </LoginForm>\r\n        </LogInForm>\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default createuser;\r\n","module.exports = require(\"@ant-design/icons\");","module.exports = require(\"next/dist/shared/lib/head-manager-context.js\");","module.exports = require(\"next/dist/shared/lib/i18n/normalize-locale-path.js\");","module.exports = require(\"next/dist/shared/lib/is-plain-object.js\");","module.exports = require(\"next/dist/shared/lib/mitt.js\");","module.exports = require(\"next/dist/shared/lib/page-path/denormalize-page-path.js\");","module.exports = require(\"next/dist/shared/lib/router-context.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/format-url.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/get-asset-path-from-route.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/get-middleware-regex.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/is-dynamic.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/parse-relative-url.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/querystring.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/resolve-rewrites.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/route-matcher.js\");","module.exports = require(\"next/dist/shared/lib/router/utils/route-regex.js\");","module.exports = require(\"next/dist/shared/lib/utils.js\");","module.exports = require(\"next/head\");","module.exports = require(\"next/router\");","module.exports = require(\"react\");","module.exports = require(\"react-redux\");","module.exports = require(\"react/jsx-runtime\");","module.exports = require(\"tailwind-styled-components\");","module.exports = import(\"react-hook-form\");;"],"names":["SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","signUpRequestAction","data","type","signUpSuccessAction","signUpFailureAction","React","useCallback","useEffect","useRef","useDispatch","useSelector","tw","avatarDeleteAction","avatarUploadRequestAction","PreAvatar","img","Avatar","InputAvatar","input","AvatarButton","div","AvatarInput","avatarInput","dispatch","onClickAvater","current","click","onChangeAvatar","e","avatarFormData","FormData","forEach","call","target","files","file","append","value","onClickDeleteAvatar","avatarPaths","me","state","userReducer","className","src","onClick","name","ref","onChange","Head","useForm","Input","Layout","LogInForm","useRouter","LoginForm","form","SubmitButton","button","Error","createuser","signUpDone","signUpLoading","signUpReducer","router","register","handleSubmit","formState","errors","reset","onValid","email","password","passwordCheck","alert","formData","replace","meta","charSet","title","headTitle","isLogIn","onSubmit","encType","required","placeholder","message","maxLength","minLength"],"sourceRoot":""}